// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Obligatorio.LogicaInfraestructura.AccesoDatos.EF;

#nullable disable

namespace Obligatorio.LogicaInfraestructura.Migrations
{
    [DbContext(typeof(ObligatorioContext))]
    [Migration("20250922083206_addTipoGasto")]
    partial class addTipoGasto
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Equipo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.HasKey("ID");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.TipoGasto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.HasKey("ID");

                    b.ToTable("TiposGasto");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IDEquipo")
                        .HasColumnType("int");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("ID");

                    b.HasIndex("IDEquipo");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("TipoUsuario").HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Administrador", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Empleado", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Gerente", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Gerente");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Equipo", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.NombreEquipo", "Nombre", b1 =>
                        {
                            b1.Property<int>("EquipoID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("EquipoID");

                            b1.ToTable("Equipos");

                            b1.WithOwner()
                                .HasForeignKey("EquipoID");
                        });

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.TipoGasto", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Descripcion", "Descripcion", b1 =>
                        {
                            b1.Property<int>("TipoGastoID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Descripcion");

                            b1.HasKey("TipoGastoID");

                            b1.ToTable("TiposGasto");

                            b1.WithOwner()
                                .HasForeignKey("TipoGastoID");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.NombreGasto", "NombreGasto", b1 =>
                        {
                            b1.Property<int>("TipoGastoID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("TipoGastoID");

                            b1.ToTable("TiposGasto");

                            b1.WithOwner()
                                .HasForeignKey("TipoGastoID");
                        });

                    b.Navigation("Descripcion")
                        .IsRequired();

                    b.Navigation("NombreGasto")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Equipo", "Equipo")
                        .WithMany("Usuarios")
                        .HasForeignKey("IDEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Apellido", "Apellido", b1 =>
                        {
                            b1.Property<int>("UsuarioID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Apellido");

                            b1.HasKey("UsuarioID");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioID");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Contrasena", "Contrasena", b1 =>
                        {
                            b1.Property<int>("UsuarioID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Contrasena");

                            b1.HasKey("UsuarioID");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioID");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Email", "Email", b1 =>
                        {
                            b1.Property<int>("UsuarioID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioID");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioID");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("UsuarioID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("UsuarioID");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioID");
                        });

                    b.Navigation("Apellido")
                        .IsRequired();

                    b.Navigation("Contrasena")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Equipo", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
