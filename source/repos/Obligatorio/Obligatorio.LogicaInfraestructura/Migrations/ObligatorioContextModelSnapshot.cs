// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Obligatorio.LogicaInfraestructura.AccesoDatos.EF;

#nullable disable

namespace Obligatorio.LogicaInfraestructura.Migrations
{
    [DbContext(typeof(ObligatorioContext))]
    partial class ObligatorioContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Auditoria", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("FechaAccion")
                        .HasColumnType("datetime2")
                        .HasColumnName("FechaAccion");

                    b.HasKey("ID");

                    b.ToTable("Auditorias");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Equipo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.HasKey("ID");

                    b.ToTable("Equipos");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Pago", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IDTipoGasto")
                        .HasColumnType("int");

                    b.Property<int>("IDUsuario")
                        .HasColumnType("int");

                    b.Property<string>("MetodoPago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MetodoPago");

                    b.Property<string>("TipoPago")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.HasKey("ID");

                    b.HasIndex("IDTipoGasto");

                    b.HasIndex("IDUsuario");

                    b.ToTable("Pagos");

                    b.HasDiscriminator<string>("TipoPago").HasValue("Pago");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.TipoGasto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.HasKey("ID");

                    b.ToTable("TiposGasto");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("IDEquipo")
                        .HasColumnType("int");

                    b.Property<string>("TipoUsuario")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.HasKey("ID");

                    b.HasIndex("IDEquipo");

                    b.ToTable("Usuarios");

                    b.HasDiscriminator<string>("TipoUsuario").HasValue("Usuario");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.PagoRecurrente", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Pago");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaFin");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaInicio");

                    b.HasDiscriminator().HasValue("Pago Recurrente");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.PagoUnico", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Pago");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime")
                        .HasColumnName("FechaPago");

                    b.HasDiscriminator().HasValue("Pago Unico");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Administrador", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Administrador");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Empleado", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Gerente", b =>
                {
                    b.HasBaseType("Obligatorio.LogicaNegocio.Entidades.Usuario");

                    b.HasDiscriminator().HasValue("Gerente");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Auditoria", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Auditoria.DescripcionAuditoria", "Descripcion", b1 =>
                        {
                            b1.Property<int>("AuditoriaID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Descripcion");

                            b1.HasKey("AuditoriaID");

                            b1.ToTable("Auditorias");

                            b1.WithOwner()
                                .HasForeignKey("AuditoriaID");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Auditoria.EmailUsuarioAuditoria", "EmailUsuario", b1 =>
                        {
                            b1.Property<int>("AuditoriaID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("EmailUsuario");

                            b1.HasKey("AuditoriaID");

                            b1.ToTable("Auditorias");

                            b1.WithOwner()
                                .HasForeignKey("AuditoriaID");
                        });

                    b.Navigation("Descripcion")
                        .IsRequired();

                    b.Navigation("EmailUsuario")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Equipo", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Equipo.NombreEquipo", "Nombre", b1 =>
                        {
                            b1.Property<int>("EquipoID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("EquipoID");

                            b1.ToTable("Equipos");

                            b1.WithOwner()
                                .HasForeignKey("EquipoID");
                        });

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Pago", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.TipoGasto", "TipoGastoAsociado")
                        .WithMany("Pagos")
                        .HasForeignKey("IDTipoGasto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Usuario", "Usuario")
                        .WithMany("Pagos")
                        .HasForeignKey("IDUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Pago.DescripcionPago", "DescripcionPago", b1 =>
                        {
                            b1.Property<int>("PagoID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Descripcion");

                            b1.HasKey("PagoID");

                            b1.ToTable("Pagos");

                            b1.WithOwner()
                                .HasForeignKey("PagoID");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Pago.MontoPago", "MontoPago", b1 =>
                        {
                            b1.Property<int>("PagoID")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("Monto");

                            b1.HasKey("PagoID");

                            b1.ToTable("Pagos");

                            b1.WithOwner()
                                .HasForeignKey("PagoID");
                        });

                    b.Navigation("DescripcionPago")
                        .IsRequired();

                    b.Navigation("MontoPago")
                        .IsRequired();

                    b.Navigation("TipoGastoAsociado");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.TipoGasto", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.TipoGasto.Descripcion", "Descripcion", b1 =>
                        {
                            b1.Property<int>("TipoGastoID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Descripcion");

                            b1.HasKey("TipoGastoID");

                            b1.ToTable("TiposGasto");

                            b1.WithOwner()
                                .HasForeignKey("TipoGastoID");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.TipoGasto.NombreGasto", "NombreGasto", b1 =>
                        {
                            b1.Property<int>("TipoGastoID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(450)")
                                .HasColumnName("Nombre");

                            b1.HasKey("TipoGastoID");

                            b1.HasIndex("Value")
                                .IsUnique();

                            b1.ToTable("TiposGasto");

                            b1.WithOwner()
                                .HasForeignKey("TipoGastoID");
                        });

                    b.Navigation("Descripcion")
                        .IsRequired();

                    b.Navigation("NombreGasto")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.HasOne("Obligatorio.LogicaNegocio.Entidades.Equipo", "Equipo")
                        .WithMany("Usuarios")
                        .HasForeignKey("IDEquipo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Usuario.Apellido", "Apellido", b1 =>
                        {
                            b1.Property<int>("UsuarioID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Apellido");

                            b1.HasKey("UsuarioID");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioID");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Usuario.Contrasena", "Contrasena", b1 =>
                        {
                            b1.Property<int>("UsuarioID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Contrasena");

                            b1.HasKey("UsuarioID");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioID");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Usuario.Email", "Email", b1 =>
                        {
                            b1.Property<int>("UsuarioID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Email");

                            b1.HasKey("UsuarioID");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioID");
                        });

                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Usuario.Nombre", "Nombre", b1 =>
                        {
                            b1.Property<int>("UsuarioID")
                                .HasColumnType("int");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)")
                                .HasColumnName("Nombre");

                            b1.HasKey("UsuarioID");

                            b1.ToTable("Usuarios");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioID");
                        });

                    b.Navigation("Apellido")
                        .IsRequired();

                    b.Navigation("Contrasena")
                        .IsRequired();

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Equipo");

                    b.Navigation("Nombre")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.PagoUnico", b =>
                {
                    b.OwnsOne("Obligatorio.LogicaNegocio.vo.Pago.NumeroRecibo", "NumeroRecibo", b1 =>
                        {
                            b1.Property<int>("PagoUnicoID")
                                .HasColumnType("int");

                            b1.Property<int>("Value")
                                .HasColumnType("int")
                                .HasColumnName("NumeroRecibo");

                            b1.HasKey("PagoUnicoID");

                            b1.HasIndex("Value")
                                .IsUnique()
                                .HasFilter("[NumeroRecibo] IS NOT NULL");

                            b1.ToTable("Pagos");

                            b1.WithOwner()
                                .HasForeignKey("PagoUnicoID");
                        });

                    b.Navigation("NumeroRecibo")
                        .IsRequired();
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Equipo", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.TipoGasto", b =>
                {
                    b.Navigation("Pagos");
                });

            modelBuilder.Entity("Obligatorio.LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Navigation("Pagos");
                });
#pragma warning restore 612, 618
        }
    }
}
